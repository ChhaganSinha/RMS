@page "/all-record"
@using RMS.Client.Client
@using RMS.Client.Pages.GridComponent
@using RMS.Client.Shared.Popup
@inject AppClient client
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject PermissionService PermissionService
@attribute [Authorize]

<div class="page-header breadcumb-sticky">
    <div class="page-block">
        <div class="row align-items-center">
            <div class="col-md-12">
                <div class="page-header-title">
                    <h5 class="m-b-10">
                        All Records
                    </h5>
                </div>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/"><i class="feather icon-home"></i></a>
                    </li>
                    <li class="breadcrumb-item"><a>All Records</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>

@if (canView)
{
    <div class="row">
        <div class="col-sm-12 p-0">
            <div class="card-body p-2 mt-n3">
                <AllRecordsGrid />
            </div>
        </div>
    </div>
}
else
{
    <p>You do not have permission to view this page.</p>
}

@code {
    private bool canView = false;
    private bool canEdit = false;
    private bool hasFullAccess = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        // Check permissions
        var permissions = await PermissionService.HasPermission("AllRecord");

        if (permissions != null)
        {
            canView = permissions.CanView;
            canEdit = permissions.CanEdit;
            hasFullAccess = permissions.HasFullAccess;
        }

        // Perform additional initialization if needed
    }
}
