@page "/permision-controls"
@using RMS.Dto.Auth
@using RMS.Client.Shared.Popup
@using RMS.Client.Pages.Admin
@using RMS.Dto.RBAC
@inject IdentityAuthenticationStateProvider authStateProvider
@inject NavigationManager navigationManager
@inject IAuthorizeApi authorizeApi
@attribute [Authorize(Roles = "SuperAdmin,Admin")]


<div class="page-header breadcumb-sticky">
    <div class="page-block">
        <div class="row align-items-center">
            <div class="col-md-12">
                <div class="page-header-title">
                    <h5 class="m-b-10">
                        Roles
                    </h5>
                </div>
                <ul class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/"><i class="feather icon-home"></i></a>
                    </li>
                    <li class="breadcrumb-item"><a>Roles</a></li>
                </ul>
            </div>
        </div>
    </div>
</div>
@if (users == null)
{
    <div style="margin-top:40vh">
        <div class="loading-bar"></div>
    </div>
}
else if (users.Count == 0)
{
    <p>No users found.</p>
}
else
{
    <div class="bt-wizard">
        <ul class="nav nav-pills">
            <li class="nav-item"><a @onclick="()=>SwitchTab(1)" style="cursor:pointer" class="nav-link rounded-0 @(Tab == 1 ? "active" : "")" data-toggle="tab">Manage Roles</a></li>
            <li class="nav-item"><a @onclick="()=>SwitchTab(3)" style="cursor:pointer" class="nav-link rounded-0 @(Tab == 3 ? "active" : "")" data-toggle="tab">Manage Password</a></li>
        </ul>
        <div class="tab-content card">
            <div class="pt-1 bg-primary"></div>
            @if (Tab == 1)
            {
                <div class="tab-pane card-body pt-4 active show p-2">
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered nowrap">
                            <thead>
                                <tr>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Current Role</th>
                                    <th style="min-width: 115px;">Update Role</th>
                                    <th>IsActive</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in users)
                                {
                                    <tr>
                                        <td>@user.UserName</td>
                                        <td>@user.Email</td>
                                        <td>@user.Role</td>
                                        <td>
                                            <select @bind="user.Role" class="form-control">
                                                @foreach (var role in Roles)
                                                {
                                                    <option value="@role.Name">@role.Name</option>
                                                }
                                            </select>
                                        </td>
                                        <td style="text-align: center;">
                                            <InputCheckbox disabled="@(user.Role == "Admin")" @bind-Value="user.IsActive" />
                                        </td>
                                        <td>
                                            <button class="btn btn-primary"  @onclick="() => UpdateUserRole(user)">
                                                Update
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            @if (Tab == 3)
            {
                <div class="tab-pane card-body pt-4 active show p-2">
                    <div class="container">
                        <div class="row justify-content-md-center">
                            <div class="col-sm-6">
                                <div class="card">
                                    <i class="text-warning bg-secondary" style="text-align:center">You can change the password of any user from here</i>
                                    <ChangeUserPasswordByAdmin />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <Dailog Title="@Message" Show="@show" OnCloseDialog="ResetForm">
        @if (show)
        {
            @if (TaskCompleted)
            {
                <div style="text-align:center;">
                    @MessageBody
                </div>
            }
            else
            {
                <div style="text-align:center">
                    <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
                </div>
            }
        }
    </Dailog>
}

@code {
    private List<UserViewModel> users;
    private List<RoleViewModel> Roles;
    string Title = "Admin Control Panel";
    private bool show = false;
    string Message = string.Empty;
    string MessageBody = "Thank you!";
    bool TaskCompleted = false;
    int Tab = 1;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await authorizeApi.GetUsers();
            Roles = await authStateProvider.GetRoles();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading data: " + ex.Message);
            // Handle error loading initial data
        }
    }

    private async Task UpdateUserRole(UserViewModel user)
    {
        try
        {
            Message = "Please wait";
            await authorizeApi.UpdateUserRole(user);
            Message = "Successfully Updated";
            TaskCompleted = true;
            // Refresh user list after update
            users = await authorizeApi.GetUsers();
        }
        catch (Exception ex)
        {
            Message = "Error: " + ex.Message;
            TaskCompleted = true;
        }
    }

    private void SwitchTab(int tabNumber)
    {
        Tab = tabNumber;
    }

    private async void ResetForm()
    {
        show = false;
        users = await authorizeApi.GetUsers();
        StateHasChanged();
    }
}
