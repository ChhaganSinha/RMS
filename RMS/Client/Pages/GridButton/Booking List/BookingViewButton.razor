@using GridShared
@using GridShared.Columns
@using GridShared.Utility
@using Microsoft.Extensions.Primitives
@using RMS.Client.Pages.GridComponent
@using RMS.Client.Shared.Popup
@using RMS.Client.Client
@inject AppClient client
@implements ICustomGridComponent<ReservationDetailsDto>
@inject NavigationManager NavigationManager

<button class='btn btn-sm btn-secondary' style="border-radius:15px" @onclick="MyClickHandler" title="View"><i class="fa fa-eye"></i></button>
<PageDialog Title="@Title" Show="@show" ClosePageDialog="ResetForm">
    @if (show)
    {
        <div class="container">
            <h4>Reservation Details</h4>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th>Check-In</th>
                        <td>@model.CheckIn.ToString("dd MMM yyyy")</td>
                    </tr>
                    <tr>
                        <th>Check-Out</th>
                        <td>@model.CheckOut.ToString("dd MMM yyyy")</td>
                    </tr>
                    <tr>
                        <th>Arrival From</th>
                        <td>@model.ArrivalFrom</td>
                    </tr>
                    <tr>
                        <th>Booking Type</th>
                        <td>@model.BookingType</td>
                    </tr>
                    <tr>
                        <th>Booking Reference No</th>
                        <td>@model.BookingReferenceNo</td>
                    </tr>
                    <tr>
                        <th>Purpose Of Visit</th>
                        <td>@model.PurposeOfVisit</td>
                    </tr>
                    <tr>
                        <th>Remarks</th>
                        <td>@model.Remarks</td>
                    </tr>
                    <tr>
                        <th>Status</th>
                        <td>@model.Status</td>
                    </tr>
                </tbody>
            </table>

            <h4>Room Bookings</h4>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Room Type</th>
                        <th>Room No</th>
                        <th>Adults</th>
                        <th>Children</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var room in model.RoomBookings)
                    {
                        <tr>
                            <td>@room.RoomType</td>
                            <td>@room.RoomNo</td>
                            <td>@room.Adults</td>
                            <td>@room.Children</td>
                        </tr>
                    }
                </tbody>
            </table>

            <h4>Customer Information</h4>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Mobile No</th>
                        <th>Email</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var customer in model.CustomerInfo)
                    {
                        <tr>
                            <td>@customer.Name</td>
                            <td>@customer.MobileNo</td>
                            <td>@customer.Email</td>
                        </tr>
                    }
                </tbody>
            </table>

            <h4>Payment Details</h4>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th>Discount Reason</th>
                        <td>@model.PaymentDetails.DiscountReason</td>
                    </tr>
                    <tr>
                        <th>Discount Rate</th>
                        <td>@model.PaymentDetails.DiscountRate</td>
                    </tr>
                    <tr>
                        <th>Discount Amount</th>
                        <td>@model.PaymentDetails.DiscountAmount</td>
                    </tr>
                    <tr>
                        <th>Commission Rate</th>
                        <td>@model.PaymentDetails.CommissionRate</td>
                    </tr>
                    <tr>
                        <th>Commission Amount</th>
                        <td>@model.PaymentDetails.CommissionAmount</td>
                    </tr>
                </tbody>
            </table>

            <h4>Billing Details</h4>
            <table class="table table-bordered">
                <tbody>
                    <tr>
                        <th>Booking Charge</th>
                        <td>@model.BillingDetails.BookingCharge</td>
                    </tr>
                    <tr>
                        <th>Tax</th>
                        <td>@model.BillingDetails.Tax</td>
                    </tr>
                    <tr>
                        <th>Service Charge</th>
                        <td>@model.BillingDetails.ServiceCharge</td>
                    </tr>
                    <tr>
                        <th>Total Charge</th>
                        <td>@model.BillingDetails.TotalCharge</td>
                    </tr>
                </tbody>
            </table>
        </div>
    }
</PageDialog>


@code {
    [Parameter]
    public ReservationDetailsDto Item { get; set; }

    [Parameter]
    public CGrid<ReservationDetailsDto> Grid { get; set; }

    [CascadingParameter]
    protected AlertModel? alert { get; set; }

    private Timer _timer;
    private int _delay = 2500;
    bool show = false;
    bool process = false;
    string Title = "View Booking Deatils";

    ReservationDetailsDto model = new();

    private async Task MyClickHandler(MouseEventArgs e)
    {
        alert?.Clear();
        show = true;
       model = await client.GetReservationDetailsDtoById(Item.Id);
    }

    private void TimerCallback(Object o)
    {
        alert?.Clear();
        _timer.Dispose();
        StateHasChanged();
    }

    private void ResetForm()
    {
        model = new();
        show = false;
        process = false;
    }

}