@inject Blazored.LocalStorage.ILocalStorageService oLocalStore
@inject IJSRuntime JS

<style>
    @@media screen and (max-width: 450px) {
        .menu-styler {
            display: none !important;
        }
    }

    @@media screen and (min-width: 450px) {
        .menu-styler {
            display: block !important;
        }
    }
</style>

<div>
    <nav class="pcoded-navbar menupos-fixed @(layout) @(IsSidebarCollapsed ? "navbar-collapsed" : "")">
        <div class="navbar-wrapper non-selectable">
            <div class="navbar-content scroll-div">
                <ul class="nav pcoded-inner-navbar ">
                    <li class="nav-item pcoded-menu-caption">
                        <label>Home</label>
                    </li>
                    <li class="nav-item">
                        <a href="/" class="nav-link" @onclick="ToggleDashboard" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-home"></i>
                            </span><span class="pcoded-mtext">Dashboard</span>
                        </a>
                    </li>

                    <li class="nav-item pcoded-hasmenu @(IsRoomExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link" @onclick="ToggleRoom" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-layout"></i>
                            </span>
                            <span class="pcoded-mtext">Room</span>
                        </a>
                        <ul class="pcoded-submenu @(IsRoomExpanded ? "d-block" : "d-none")">
                            <li><a href="room-categories">Categories</a></li>
                            <li><a href="room-facilities">Facilities</a></li>
                            <li><a href="rooms">Rooms</a></li>
                        </ul>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsHallExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link" @onclick="ToggleHall" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-layout"></i>
                            </span>
                            <span class="pcoded-mtext">Hall</span>
                        </a>
                        <ul class="pcoded-submenu @(IsHallExpanded ? "d-block" : "d-none")">
                            <li><a href="hall-categories">Categories</a></li>
                            <li><a href="hall-facilities">Facilities</a></li>
                            <li><a href="hall">Hall</a></li>
                        </ul>
                    </li>

                    <li class="nav-item pcoded-hasmenu @(IsHumanResourceExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleHR" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-layers"></i>
                            </span><span class="pcoded-mtext">Human Resource</span>
                        </a>
                        <ul class="pcoded-submenu @(IsHumanResourceExpanded ? "d-block" : "d-none")">
                            <li><a href="designations">Designations</a></li>
                            <li><a href="departments">Departments</a></li>
                            <li><a href="employees">Employees</a></li>

                        </ul>
                    </li>

                    <li class="nav-item pcoded-menu-caption">
                        <label>Reservation</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsTrainingExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleHR" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-box"></i>
                            </span><span class="pcoded-mtext">Training</span>
                        </a>
                        <ul class="pcoded-submenu @(IsTrainingExpanded ? "d-block" : "d-none")">
                            <li><a href="training">All Training</a></li>
                            <li><a href="tenant-training-config">New Training</a></li>
                            <li><a href="training-video-upload">Training Video</a></li>
                            <li><a href="training-Quizzes">Training Quiz</a></li>

                        </ul>
                    </li>
                    <li class="nav-item">
                        <a href="training/my-trainings" class="nav-link " @onclick="ToggleMyTraining" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-book"></i>
                            </span><span class="pcoded-mtext">My Training</span>
                        </a>
                    </li>

                    <li class="nav-item pcoded-hasmenu @(IsReportExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleReport" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-pie-chart"></i>
                            </span><span class="pcoded-mtext">Report</span>
                        </a>
                        <ul class="pcoded-submenu @(IsReportExpanded ? "d-block" : "d-none")">
                            <li><a href="report">Campaign Report</a></li>
                            <li><a href="tenant-training-report">Training Report</a></li>


                        </ul>
                    </li>


                    <li class="nav-item pcoded-menu-caption">
                        <label>Front Desk</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsSettingExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleSetting" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-settings"></i>
                            </span><span class="pcoded-mtext">Settings</span>
                        </a>
                        <ul class="pcoded-submenu @(IsSettingExpanded ? "d-block" : "d-none")">
                            <li><a href="az-config">Azure App Configurations</a></li>
                            <li><a href="onprem-ad-config">AD Configurations</a></li>
                            <li><a href="tenant-domains">Domain Configurations</a></li>
                            <li><a href="redirect-urls">Return Url Configurations</a></li>
                        </ul>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Housekeeping</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Food and Beverage</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Activities</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Billings</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Customer</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Staff</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Securities</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>

                    <li class="nav-item pcoded-menu-caption">
                        <label>Analytics</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Integrations</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>
                    <li class="nav-item pcoded-menu-caption">
                        <label>Compliances</label>
                    </li>
                    <li class="nav-item pcoded-hasmenu @(IsFaqExpanded ? "pcoded-trigger" : "")">
                        <a class="nav-link " @onclick="ToggleFaq" style="cursor:pointer">
                            <span class="pcoded-micon">
                                <i class="feather icon-help-circle"></i>
                            </span><span class="pcoded-mtext">
                                FAQ
                            </span>
                        </a>
                    </li>



                </ul>
            </div>
        </div>
    </nav>

    <header class="navbar pcoded-header navbar-expand-lg navbar-light headerpos-fixed @(headerColor)">
        <div class="m-header" style="cursor:pointer">
            <a @onclick="ToggleSidebar" class="mobile-menu" id="mobile-collapse"><span></span></a>
            <a class="b-brand" href="/">
                <img src="assets/images/logo.png" alt="" class="logo" style="width:70px;height:46px;">
            </a>
            <a class="mob-toggler" @onclick="()=>MobileToggle = !MobileToggle">
                <i class="feather icon-more-vertical"></i>
            </a>
        </div>
        <div class="collapse navbar-collapse @(MobileToggle ? "d-flex" : "")">
            <ul class="navbar-nav mr-auto">
                @* <li class="nav-item">
                <a class="pop-search"><i class="feather icon-search"></i></a>
                <div class="search-bar">
                <input type="text" class="form-control border-0 shadow-none" placeholder="Search here">
                <button type="button" class="close" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>
                </div>
                </li> *@
                <li class="nav-item">
                    <a class="full-screen" onclick="javascript:toggleFullScreen()" style="cursor:pointer">
                        <i class="feather icon-maximize"></i>
                    </a>
                </li>
            </ul>
            <ul class="navbar-nav ml-auto">
                <li>
                    <div class="dropdown">
                        <a class="displayChatbox dropdown-toggle" @onclick="()=>OpenChat=true" style="cursor:pointer">
                            <i class="icon feather icon-mail"></i><span class="badge bg-success"><span class="sr-only"></span></span>
                        </a>
                    </div>
                </li>
                <li>
                    <LoginDisplay />
                </li>
            </ul>
        </div>
    </header>

    <section class="header-user-list @(OpenChat ? "open" : "")">
        <a class="h-close-text" @onclick="()=>OpenChat=false" style="cursor:pointer"><i class="feather icon-x"></i></a>
        <ul class="nav nav-tabs" id="chatTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link active text-uppercase border-0" id="setting-tab" data-toggle="tab" href="#setting"
                   role="tab" aria-controls="setting" aria-selected="false">
                    <i class="feather icon-settings mr-2"></i>Setting
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link text-uppercase border-0" id="chat-tab" data-toggle="tab" href="#chat"
                   role="tab" aria-controls="chat" aria-selected="true">
                    <i class="feather icon-message-circle mr-2"></i>Chat
                </a>
            </li>
        </ul>

    </section>
</div>


@code {
    [Parameter]
    public EventCallback<bool> IsCollapsedChanged { get; set; }
    string layout = "menu-light";
    string headerColor = "header-blue";

    private bool IsSidebarCollapsed = false;
    private async void ToggleSidebar()
    {
        layout = await oLocalStore.GetItemAsync<string>("layout");
        IsSidebarCollapsed = !IsSidebarCollapsed;
        IsCollapsedChanged.InvokeAsync(IsSidebarCollapsed);
    }

    private bool IsRoomExpanded = false;
    private bool IsHallExpanded = false;
    private bool IsHumanResourceExpanded = false;
    private bool IsTrainingExpanded = false;
    private bool IsReportExpanded = false;
    private bool IsSettingExpanded = false;
    private bool IsFaqExpanded = false;
    private bool IsGetStartedExpand = false;
    private bool IsReportHubExpand = false;
    private bool IsPhishTrainExpand = false;
    private bool IsRiskScoreExpand = false;

    private bool MobileToggle = false;
    private bool OpenChat = false;
    private bool RemoveHelpCard = false;

    private void ToggleDashboard(MouseEventArgs e)
    {
        IsRoomExpanded = false;
        IsHallExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsFaqExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void ToggleRoom(MouseEventArgs e)
    {
        IsRoomExpanded = !IsRoomExpanded;
        IsHallExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsFaqExpanded = false;
        IsGetStartedExpand = false;

    }
    private void ToggleHall(MouseEventArgs e)
    {
        IsHallExpanded = !IsHallExpanded;
        IsRoomExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsFaqExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void ToggleHR(MouseEventArgs e)
    {
        IsHumanResourceExpanded = !IsHumanResourceExpanded;
        IsRoomExpanded = false;
        IsHallExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsFaqExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void ToggleMyTraining(MouseEventArgs e)
    {
        IsRoomExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsFaqExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void ToggleReport(MouseEventArgs e)
    {
        IsReportExpanded = !IsReportExpanded;
        IsRoomExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsSettingExpanded = false;
        IsFaqExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void ToggleSetting(MouseEventArgs e)
    {
        IsSettingExpanded = !IsSettingExpanded;
        IsRoomExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsFaqExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void ToggleFaq(MouseEventArgs e)
    {
        IsFaqExpanded = !IsFaqExpanded;
        IsRoomExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void ToggleGetStarted(MouseEventArgs e)
    {
        IsGetStartedExpand = !IsGetStartedExpand;

        IsRoomExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void ToggleReportHub(MouseEventArgs e)
    {
        IsReportHubExpand = !IsReportHubExpand;

        IsRoomExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsGetStartedExpand = false;

        IsPhishTrainExpand = false;
        IsRiskScoreExpand = false;
    }
    private void TogglePhishTrain(MouseEventArgs e)
    {
        IsPhishTrainExpand = !IsPhishTrainExpand;
        IsRoomExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;

        IsRiskScoreExpand = false;
    }
    private void ToggleRiskScore(MouseEventArgs e)
    {
        IsRiskScoreExpand = !IsRiskScoreExpand;
        IsRoomExpanded = false;
        IsHumanResourceExpanded = false;
        IsTrainingExpanded = false;
        IsReportExpanded = false;
        IsSettingExpanded = false;
        IsGetStartedExpand = false;
        IsReportHubExpand = false;
        IsPhishTrainExpand = false;

    }

    protected override async Task OnInitializedAsync()
    {
        layout = await oLocalStore.GetItemAsync<string>("layout");
        headerColor = await oLocalStore.GetItemAsync<string>("headerColor");
        await JS.InvokeVoidAsync("setLayout", layout, headerColor);
    }


}
